{"version":3,"sources":["assets/north.gif","location.js","index.js"],"names":["module","exports","__webpack_require__","p","config","North","text","img","pic","South","Fun","props","region","lati","_config$region","React","createElement","className","logi","src","alt","First","_React$Component","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","lat","log","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","longitude","error","err","message","_inherits","_createClass","key","value","Component","ReactDOM","render","document","querySelector"],"mappings":"2EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,sLCGlCC,SAAS,CACXC,MAAQ,CACJC,KAAO,oBACPC,IAAMC,KAEVC,MAAQ,CACJH,KAAO,oBACPC,IAAMC,OAoBCE,EAjBH,SAACC,GACT,IAAIC,EAAUD,EAAME,KAAO,EAAK,QAAU,QAAQC,EAC/BV,EAAOQ,GAAnBN,EAAIQ,EAAJR,KAAKC,EAAGO,EAAHP,IACZ,OACIQ,IAAAC,cAAA,OAAKC,UAAWL,GAChBG,IAAAC,cAAA,OAAKC,UAAU,iCACfF,IAAAC,cAAA,OAAKC,UAAU,SACfF,IAAAC,cAAA,WAAKD,IAAAC,cAAA,UAAKV,IACVS,IAAAC,cAAA,WAAKD,IAAAC,cAAA,UAAI,gBAAcL,EAAMO,OAC7BH,IAAAC,cAAA,WAAKD,IAAAC,cAAA,UAAI,eAAaL,EAAME,KAAK,MACjCE,IAAAC,cAAA,WAASD,IAAAC,cAAA,YAETD,IAAAC,cAAA,OAAKC,UAAU,mCAAkCF,IAAAC,cAAA,OAAKG,IAAKZ,EAAKa,IAAI,oCCrBtEC,EAAK,SAAAC,GACT,SAAAD,EAAYV,GAAM,IAAAY,EAMqC,OANrCC,YAAAC,KAAAJ,IAChBE,EAAAG,YAAAD,KAAAE,YAAAN,GAAAO,KAAAH,KAAMd,KACDkB,MAAQ,CAACC,IAAM,MACpBP,EAAKM,MAAQ,CAACE,IAAM,MACpBC,OAAOC,UAAUC,YAAYC,mBAC3B,SAACC,GAAcb,EAAKc,SAAS,CAACP,IAAMM,EAASE,OAAOC,SAAWR,IAAMK,EAASE,OAAOE,aACrF,SAACC,GAAWlB,EAAKc,SAAS,CAACK,IAAMD,EAAME,YAAYpB,EAavD,OApBSqB,YAAAvB,EAAAC,GAQRuB,YAAAxB,EAAA,EAAAyB,IAAA,SAAAC,MAAA,WAGF,OAAItB,KAAKI,MAAMC,KAAOL,KAAKI,MAAMa,IAC1B3B,IAAAC,cAAA,WAAK,WAASS,KAAKI,MAAMa,KAE7BjB,KAAKI,MAAMC,MAAQL,KAAKI,MAAMa,IACzB3B,IAAAC,cAACN,EAAG,CAACG,KAAMY,KAAKI,MAAMC,IAAKZ,KAAQO,KAAKI,MAAME,MAG5ChB,IAAAC,cAAA,WAAK,4BAEdK,EApBS,CAASN,IAAMiC,WAsBzBC,IAASC,OAAQnC,IAAAC,cAACK,EAAK,MAAK8B,SAASC,cAAc","file":"static/js/main.a5a81887.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/north.57c65466.gif\";","import React from 'react';\r\nimport pic from './assets/north.gif'\r\nimport './location.css'\r\nconst config = {\r\n    North : {\r\n        text : 'Your are in North' ,\r\n        img : pic\r\n    },\r\n    South : {\r\n        text : 'Your are in South' ,\r\n        img : pic\r\n    }\r\n}\r\nconst Fun = (props) =>{\r\n    var region = (props.lati > 0) ? 'North' : 'South';\r\n    const {text,img} = config[region]\r\n    return (\r\n        <div className={region}>\r\n        <div className='ui teal bottom attached label'>\r\n        <div className='image'>\r\n        <div><h1>{text}</h1></div>\r\n        <div><h3>Longitude ~  {props.logi}</h3></div>\r\n        <div><h3>Latitude ~  {props.lati} </h3></div>\r\n        <br></br><br></br>\r\n        </div>\r\n        <div className='ui raised text continer segment'><img src={img} alt='pictures of south and north' /></div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Fun;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Fun from './location';\n\nclass First extends React.Component{\n  constructor(props){\n    super(props)\n    this.state = {lat : null}\n    this.state = {log : null}\n    window.navigator.geolocation.getCurrentPosition(\n      (position) => {this.setState({lat : position.coords.latitude , log : position.coords.longitude })},\n      (error) => {this.setState({err : error.message})});\n  }\n\n  render(){   \n if(!this.state.lat && this.state.err){\n return <div>Errot : {this.state.err}</div>\n }\n if(this.state.lat && !this.state.err){\n  return <Fun lati={this.state.lat} logi = {this.state.log}/>\n  }\n  else{\n    return <div>Accessing permission</div>\n  }\n } \n}\n ReactDOM.render( <First />, document.querySelector('#root'))\n"],"sourceRoot":""}